{"version":3,"sources":["webpack://grapesjs-firestore/webpack/universalModuleDefinition","webpack://grapesjs-firestore/webpack/bootstrap","webpack://grapesjs-firestore/./src/index.js","webpack://grapesjs-firestore/external \"grapesjs\""],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","grapesjs","plugins","add","editor","opts","options","apiKey","authDomain","projectId","docId","collectionName","enableOffline","settings","timestampsInSnapshots","sm","StorageManager","storageName","db","doc","collection","dbSettings","onError","err","code","getDoc","getDocId","getAsyncCollection","clb","firebase","initializeApp","fs","firestore","callback","enablePersistence","then","catch","getAsyncDoc","cll","setDocId","id","load","keys","clbError","exists","data","store","update"],"mappings":"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","file":"dist/grapesjs-firestore.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"grapesjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"grapesjs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"grapesjs-firestore\"] = factory(require(\"grapesjs\"));\n\telse\n\t\troot[\"grapesjs-firestore\"] = factory(root[\"grapesjs\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import grapesjs from 'grapesjs';\r\n\r\nexport default grapesjs.plugins.add('grapesjs-firestore', (editor, opts = {}) => {\r\n  const options = { ...{\r\n    // Firebase API key\r\n    apiKey: '',\r\n\r\n    // Firebase Auth domain\r\n    authDomain: '',\r\n\r\n    // Cloud Firestore project ID\r\n    projectId: '',\r\n\r\n    // Document id\r\n    docId: 'gjs',\r\n\r\n    // Collection name\r\n    collectionName: 'templates',\r\n\r\n    // Enable support for offline data persistence\r\n    enableOffline: true,\r\n\r\n    // Database settings (https://firebase.google.com/docs/reference/js/firebase.firestore.Settings)\r\n    settings: { timestampsInSnapshots: true },\r\n  },  ...opts };\r\n\r\n  const sm = editor.StorageManager;\r\n  const storageName = 'firestore';\r\n\r\n  let db;\r\n  let doc;\r\n  let docId;\r\n  let collection;\r\n  const apiKey = options.apiKey;\r\n  const authDomain = options.authDomain;\r\n  const projectId = options.projectId;\r\n  const dbSettings = options.settings;\r\n  const onError = err => sm.onError(storageName, err.code || err);\r\n\r\n  const getDoc = () => doc;\r\n  const getDocId = () => docId || options.docId;\r\n\r\n  const getAsyncCollection = (clb) => {\r\n    if (collection) return clb(collection);\r\n    firebase.initializeApp({ apiKey, authDomain, projectId });\r\n    const fs = firebase.firestore();\r\n    fs.settings(dbSettings);\r\n\r\n    const callback = () => {\r\n      db = firebase.firestore();\r\n      collection = db.collection(options.collectionName);\r\n      clb(collection);\r\n    }\r\n\r\n    if (options.enableOffline) {\r\n      fs.enablePersistence().then(callback).catch(onError);\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  const getAsyncDoc = (clb) => {\r\n    getAsyncCollection(cll => {\r\n      doc = cll.doc(getDocId());\r\n      clb(doc);\r\n    });\r\n  };\r\n\r\n  sm.add(storageName, {\r\n    getDoc,\r\n\r\n    getDocId,\r\n\r\n    setDocId(id) {\r\n      docId = id;\r\n    },\r\n\r\n    load(keys, clb, clbError) {\r\n      getAsyncDoc(doc => {\r\n        doc.get()\r\n        .then(doc => doc.exists && clb(doc.data()))\r\n        .catch(clbError);\r\n      });\r\n    },\r\n\r\n    store(data, clb, clbError) {\r\n      getAsyncDoc(doc => {\r\n        doc.update(data)\r\n        .then(clb)\r\n        .catch(clbError);\r\n      });\r\n    }\r\n  });\r\n});\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;"],"sourceRoot":""}